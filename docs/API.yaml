openapi: 3.0.3
info:
  title: profile.fluid-line.ru - OpenAPI 3.0.3
  version: 1.0.0
  description: API для личного кабинета
servers:
  - url: 'profile.fluid-line.ru'
tags:
  - name: OTHER
    description: 'Остальное'
  - name: USER
    description: 'Для работы с пользователем'
  - name: AUTH
    description: 'Для аутентификации/авторизации'
  - name: ORDERS
    description: 'Для получения информации по заказам'
  - name: MANAGER
    description: 'Для взаимодействий с менеджерами'
  - name: DOWNLOAD
    description: 'Для скачивания файлов'
paths:
  /forgot-password:
    post:
      tags:
        - OTHER
      description: 'Запрос на восстановление пароля'
      responses:
        200:
          description: 'SUCCESS'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Alert'
  /auth/login:
    post:
      tags:
        - AUTH
      description: 'Вход в личный кабинет'
      requestBody:
        $ref: '#/components/requestBodies/UserAuth'
      responses:
        201:
          description: 'SUCCESS'
        401:
          description: 'ERROR: неправильные параметры входа'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Alert'
  /auth/sms/resend:
    post:
      tags:
        - AUTH
      description: 'Запросить повторную отправку СМС'
      requestBody:
        $ref: '#/components/requestBodies/UserAuth'
      responses:
        200:
          description: 'SUCCESS'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Alert'
  /auth/sms/send:
    post:
      tags:
        - AUTH
      description: 'Отправка пользователем кода из СМС'
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              type: object
              properties:
                password:
                  type: string
                phone:
                  type: string
                email:
                  type: string
                code:
                  type: string
      responses:
        200:
          description: 'SUCCESS'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthToken'
  /user/info:
    get:
      tags:
        - USER
      description: 'Получение информации о залогиненном в данный момент пользователе'
      responses:
        200:
          description: 'SUCCESS'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
  /user/logout:
    get:
      tags:
        - USER
      description: 'выход из личного кабинета'
      responses:
        201:
          description: 'SUCCESS'
          content:
            application/json:
              schema:
                type: object
  /orders/list/{page}:
    get:
      tags:
        - ORDERS
      parameters:
        - name: page
          in: path
          description: номер страницы
          required: true
          schema:
            type: integer
            format: int64
      description: 'Список заказов пользователя. Содержит максимум 30 позиций'
      responses:
        200:
          description: 'SUCCESS'
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    $ref: '#/components/schemas/OrderList'
                  maxPage:
                    type: integer
        401:
          $ref: '#/components/responses/401'
  /order/{orderId}:
    get:
      tags:
        - ORDERS
      parameters:
        - name: orderId
          in: path
          description: Order id
          required: true
          schema:
            type: integer
            format: int64
      description: ''
      responses:
        200:
          description: 'SUCCESS'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderFull'
        401:
          $ref: '#/components/responses/401'
  /order/{orderId}/edit/custom-value:
    post:
      tags:
        - ORDERS
      parameters:
        - name: orderId
          in: path
          description: Order id
          required: true
          schema:
            type: integer
            format: int64
      description: 'Изменение кастомного поля в заказе у пользователя'
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              type: object
              properties:
                value:
                  type: string
      responses:
        200:
          description: 'SUCCESS'
          content:
            application/json:
              schema:
                type: object
        401:
          $ref: '#/components/responses/401'
  /manager/{managerId}/info:
    get:
      tags:
        - MANAGER
      parameters:
        - name: managerId
          in: path
          description: id менеджера
          required: true
          schema:
            type: integer
            format: int64
      description: 'Получение информации о менеджере'
      responses:
        200:
          description: 'SUCCESS'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManagerInfo'
        401:
          $ref: '#/components/responses/401'
  /manager/{managerId}/send-message:
    post:
      tags:
        - MANAGER
      parameters:
        - name: managerId
          in: path
          description: id менеджера
          required: true
          schema:
            type: integer
            format: int64
      description: 'Отправка сообщения менеджеру на имейл'
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  description: 'Email пользователя'
                  type: string
                phone:
                  description: 'Телефон пользователя'
                  type: string
                message:
                  description: 'Текст сообщения'
                  type: string
      responses:
        200:
          description: 'SUCCESS'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Alert'
        401:
          $ref: '#/components/responses/401'
  /download/invoice-documents/{docId}:
    get:
      tags:
        - DOWNLOAD
      parameters:
        - name: docId
          in: path
          description: id документа
          required: true
          schema:
            type: integer
            format: int64
      description: 'Скачать 1 определенный файл'
      responses:
        200:
          description: 'SUCCESS'
          content:
            text/plain:
              schema:
                type: string
                description: 'Контент файла, зашифрованный в Base64'
        401:
          $ref: '#/components/responses/401'
  /download/invoice-documents/all:
    post:
      tags:
        - DOWNLOAD
      description: 'Скачать все файлы к заказу'
      requestBody:
        $ref: '#/components/requestBodies/FileDownload'
      responses:
        200:
          description: 'SUCCESS'
          content:
            text/plain:
              schema:
                type: string
                description: 'Контент файла, зашифрованный в Base64'
        401:
          $ref: '#/components/responses/401'

components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
          example: 10
        registrationDate:
          type: integer
          description: 'timestamp'
          example: 1663054337
    Alert:
      type: object
      properties:
        message:
          type: string
          example: 'Запрос успешно выполнен'
    AuthToken:
      type: object
      properties:
        message:
          type: object
          properties:
            token:
              type: string
              example: '1|vbhn9q384ytghv9a48tyrju048qtghn'
    DocumentListItem:
      type: object
      properties:
        id:
          description: 'ID документа'
          type: integer
        title:
          description: 'Название файла'
          type: string
          example: 'Коммерческое предложение и счет на оплату №28080 от 16 августа 2022 г..pdf'
        file_extension:
          description: 'Расширение файла'
          type: string
          example: 'pdf'
    ProductListItem:
      type: object
      properties:
        title:
          description: 'Название позиции'
          type: string
          example: 'ACBU-6M; Соединитель с креплением на панель из нержавеющей стали O.D. 6мм, серия CBU'
        count:
          description: 'Количество в заказе'
          type: integer
        unit:
          description: 'Название единицы измерения количества позиции'
          type: string
        pure_price:
          description: 'Цена позиции без НДС'
          type: number
        vat_price:
          description: 'Цена позиции с НДС'
          type: number
        shipped_count:
          description: 'Количество отгруженного'
          type: integer
    ProductUnit:
      type: object
      properties:
        unit:
          description: 'Ключ - единица измерения, значение - количество в заказе'
          type: integer
    OrderFull:
      type: object
      properties:
        offerDocs:
          type: array
          items:
            $ref: '#/components/schemas/DocumentListItem'
        shipmentDocs:
          type: array
          items:
            $ref: '#/components/schemas/DocumentListItem'
        currency:
          description: 'Валюта заказа'
          type: string
          example: 'RUB'
        products:
          description: 'Позиции в заказе'
          type: array
          items:
            $ref: '#/components/schemas/ProductListItem'
        itemsCount:
          description: 'всего позиций в заказе'
          $ref: '#/components/schemas/ProductUnit'
        purePrice:
          description: 'Цена без НДС'
          type: number
        vatPrice:
          description: 'Цена с НДС'
          type: number
        shippedCount:
          description: 'всего доставлено позиций'
          $ref: '#/components/schemas/ProductUnit'
    OrderList:
      type: array
      items:
        $ref: '#/components/schemas/OrderListItem'
    OrderListItem:
      type: object
      properties:
        id:
          description: 'id заказа'
          type: integer
        orderDate:
          description: 'дата создания заказа (timestamp)'
          type: integer
        items:
          type: integer
          description: 'количество позиций в заказе'
        fullPrice:
          type: number
          description: 'полная стоимость заказа (дробное число)'
        currency:
          type: string
          description: 'валюта заказа (Код валюты в UPPER CASE)'
        manager:
          description: 'Минимальная информация о менеджере'
          type: object
          properties:
            id:
              description: 'id менеджера'
              type: integer
            name:
              description: 'Имя и фамилия, разделенные пробелом'
              type: string
        mail_trigger:
          description: 'триггер пиьсма к заказу'
          type: string
        pay_link:
          description: 'Ссылка на оплату заказа'
          type: string
          nullable: true
        payment_status:
          #TODO проверить возможные статусы
          description: 'Статус заказ'
          enum:
            - 'оплачен'
            - 'не оплачен'
        shipment_status:
          #TODO проверить возможные статусы
          description: 'статус доставки заказа'
          enum:
            - 'доставлен'
            - 'не доставлен'
        lastShipmentDate:
          description: 'дата последней отгрузки (timestamp)'
          nullable: true
          type: integer
        lastPaymentDate:
          description: 'дата последней оплаты (timestamp)'
          nullable: true
          type: integer
        custom_field_value:
          description: 'кастомное поле пользоваеля'
          nullable: true
          type: string
    ManagerInfo:
      type: object
      properties:
        name:
          description: 'Имя и фамилия, разделенные пробелом'
          type: string
        photo:
          description: 'URL фото'
          type: string
        email:
          description: 'Email'
          type: string
          example: 'kam@fluid-line.ru'
        phone:
          description: 'Строка, так как может содержать слова типа `доп (228)`'
          type: string
          example: '+7(495) 984-41-01 (доб.123)'
        whats_app:
          description: 'Номер телефона в WhatsApp'
          type: string
          example: '+7(495) 984-41-01'
        position:
          description: 'Позиция сотрудника'
          type: string
          example: 'помощник менеджера'
  requestBodies:
    UserAuth:
      description: 'Тело запроса для аутентификаций'
      content:
        application/json:
          schema:
            type: object
            properties:
              email:
                type: string
              password:
                type: string
              phone:
                type: string
    FileDownload:
      description: 'Тело запроса на загрузку файла'
      content:
        application/json:
          schema:
            type: object
            properties:
              order_id:
                description: 'id заказа'
                type: integer
  responses:
    401:
      description: 'UNAUTHORIZED'
    403:
      description: 'ACCESS DENIED'